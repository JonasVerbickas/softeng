on:
  push:
    branches: main

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Install pandoc
        run: |
          sudo apt install pandoc
          sudo apt install pandoc-citeproc

      - name: Set RENV_PATHS_ROOT
        shell: bash
        run: |
          echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV

      - name: Install and activate renv
          run: |
            install.packages("renv")
            renv::activate()
            renv::install("downlit")
            renv::install("xml2")
          shell: Rscript {0}

      - name: Get R and OS version
          id: get-version
          run: |
            cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
            cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
          shell: Rscript {0}

      - name: Restore Renv package cache
          uses: actions/cache@v3
          with:
            path: ${{ env.RENV_PATHS_ROOT }}
            key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
            restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-

      - name: Cache bookdown results
        uses: actions/cache@v1
        with:
          path: _bookdown_files
          key: bookdown-${{ hashFiles('**/*Rmd') }}
          restore-keys: bookdown-
        
      - name: Build site
        run: Rscript -e 'bookdown::render_book("index.Rmd")'

      - name: Install npm
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install netlify-cli
        run: |
          npm install netlify-cli -g

      - name: Deploy to Netlify
        # NETLIFY_AUTH_TOKEN added in the repo's secrets
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy --prod --dir _book
